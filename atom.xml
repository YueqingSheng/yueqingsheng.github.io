<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yueqingsheng.github.io</id>
    <title>Random thoughts</title>
    <updated>2020-09-15T03:03:48.334Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yueqingsheng.github.io"/>
    <link rel="self" href="https://yueqingsheng.github.io/atom.xml"/>
    <subtitle>Don&apos;t Learn to Code — Learn to Automate</subtitle>
    <logo>https://yueqingsheng.github.io/images/avatar.png</logo>
    <icon>https://yueqingsheng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Random thoughts</rights>
    <entry>
        <title type="html"><![CDATA[GRE 数学]]></title>
        <id>https://yueqingsheng.github.io/gre-shu-xue/</id>
        <link href="https://yueqingsheng.github.io/gre-shu-xue/">
        </link>
        <updated>2020-09-02T00:20:59.000Z</updated>
        <content type="html"><![CDATA[<h2 id="错题整理">错题整理</h2>
<blockquote>
<p>Which of the two quantities is greater?<br>
Quantity A: 35,043×25,430<br>
Quantity B: 35,430×25,043</p>
</blockquote>
<p>Explanation:If we have two pairs of numbers, and both pairs add up to the same total, then the pair with the larger product will be the pair that's closer together. So the answer is the first pair.</p>
<p>(This picture might help: if you want a rectangle with a fixed perimeter to have the biggest possible area, you want it to be a square.)<br>
周长为固定及和为固定时，边长接近的面积(乘积)最大</p>
<blockquote>
<p>To fill a larger concert hall, a madrigal singing group consisting of sopranos, altos, and basses, in a 5:7:3 ratio, needs 40 singers. What is the least number of basses the group will need?</p>
</blockquote>
<p>The ratio is : 5 singers, 7 altos , and 3 basses AND you know there are at least 40 singers.</p>
<p>Using the unknown multiplier which is the sum of the ratios or 15 X</p>
<p>Now, 15 divided for the first ratio 5 is 3. So you must have 3 times ALL the elements present in the group.</p>
<p>The least number of singer we said that is 40. As a matter of fact, this is confirmed by 15*3=45. (the questions tell you that you do have 40 ≥≥ singers.</p>
<p>7*3 = 21 (≥≥)</p>
<p>and 3*3= 9 (≥≥)</p>
<p>The answer is <strong>9</strong>, 注意按比例要45个不是40个</p>
<h2 id="计算时差">计算时差</h2>
<figure data-type="image" tabindex="1"><img src="https://yueqingsheng.github.io/post-images/1599093220457.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GRE 笔记4 填空51-98]]></title>
        <id>https://yueqingsheng.github.io/ytjfWdszp/</id>
        <link href="https://yueqingsheng.github.io/ytjfWdszp/">
        </link>
        <updated>2020-08-08T16:13:25.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>填空技巧：填空三选，如果一个正面，一个负面，一个中性，排除中性。如果两个正向，或两个负向，一般是选另外一个。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>填空技巧：填空三选，如果一个正面，一个负面，一个中性，排除中性。如果两个正向，或两个负向，一般是选另外一个。</p>
</blockquote>
<!-- more -->
<p>53.loath 不情愿的<br>
54.第二空对应competing 同义词<br>
58.defined 清晰的， scientifc 是正向的，一般不会100%错。<br>
63.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">英</mi><mi mathvariant="normal">国</mi><mi mathvariant="normal">人</mi><mi mathvariant="normal">口</mi><mi mathvariant="normal">构</mi><mi mathvariant="normal">成</mi><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">北</mi><mi mathvariant="normal">欧</mi><mi mathvariant="normal">三</mi><mi mathvariant="normal">国</mi><mi mathvariant="normal">（</mi><mi mathvariant="normal">斯</mi><mi mathvariant="normal">堪</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">纳</mi><mi mathvariant="normal">维</mi><mi mathvariant="normal">亚</mi><mi>S</mi><mi>c</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>i</mi><mi>n</mi><mi>a</mi><mi>v</mi><mi>i</mi><mi>a</mi><mi>n</mi><mi mathvariant="normal">）</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">欧</mi><mi mathvariant="normal">洲</mi><mi mathvariant="normal">：</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">国</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">荷</mi><mi mathvariant="normal">兰</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">英国人口构成
\begin{cases}
北欧三国（斯堪的纳维亚 Scandinavian）\\
欧洲：法国，荷兰
\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord cjk_fallback">英</span><span class="mord cjk_fallback">国</span><span class="mord cjk_fallback">人</span><span class="mord cjk_fallback">口</span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">成</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">北</span><span class="mord cjk_fallback">欧</span><span class="mord cjk_fallback">三</span><span class="mord cjk_fallback">国</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">堪</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">纳</span><span class="mord cjk_fallback">维</span><span class="mord cjk_fallback">亚</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">i</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">）</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">欧</span><span class="mord cjk_fallback">洲</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">国</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">荷</span><span class="mord cjk_fallback">兰</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<ol start="69">
<li></li>
</ol>
<blockquote>
<p>one theory: theory of everything, String theory and M-theory have been proposed as theories of everything.</p>
</blockquote>
<p>71.finding 新的发现<br>
Although + 否定词（not, counterintutive） 转折前后取同<br>
80.strait 海峡，churlish=rude, admire 赞赏 ~= credit 名誉<br>
82.scientific 伽利略之后时期（靠观测，实验）， Aristotle 古代科学（纯理论）<br>
84.alleged 声称的 = fake<br>
87.selective 认真挑选过的 对应 assembled detail<br>
for all =despite<br>
while not/ although not/ 程度不同的取同<br>
protoscience -&gt; modern science<br>
transformative = mindblowing = new view<br>
toll 通行费<br>
substaintial 大量的<br>
三空题，注意第三个空可能会重复之前空或者文章意思。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GRE 笔记2 填空1-50 单词和常识]]></title>
        <id>https://yueqingsheng.github.io/ma3bpEnOQ/</id>
        <link href="https://yueqingsheng.github.io/ma3bpEnOQ/">
        </link>
        <updated>2020-08-06T04:38:15.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>Tips for TC<br>
Do not merely try to consider each possible combination of answers; doing so will take too long and is open to error. Instead, try to analyze the passage in the following way:<br>
<strong>1.	Read through the passage to get an overall sense of it.<br>
2.	Identify words or phrases that seem particularly significant.<br>
3.	Think up your own words for the blanks.<br>
4.	Do not assume that the first blank is the one that should be filled first.<br>
5.	Double-check your answers.</strong></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>Tips for TC<br>
Do not merely try to consider each possible combination of answers; doing so will take too long and is open to error. Instead, try to analyze the passage in the following way:<br>
<strong>1.	Read through the passage to get an overall sense of it.<br>
2.	Identify words or phrases that seem particularly significant.<br>
3.	Think up your own words for the blanks.<br>
4.	Do not assume that the first blank is the one that should be filled first.<br>
5.	Double-check your answers.</strong></p>
</blockquote>
<!-- more -->
<p>2.Humanitarian emergencies 人道主义救援<br>
rather 后不跟 than 时后可省略<br>
resign to 屈服 （阅读时可省略）联想记忆： Trump resign to 学校抗议遣返。</p>
<blockquote>
<p>Math review 复习时看OG</p>
</blockquote>
<p>5.language instinct 和 viusal engineer 相同，表示两个状态同时存在，和后面 think of language 和 of instinct 分别的两个观点对立</p>
<p>7.protoscientific 词根：第一，原始的<br>
protoscience 和 modern science分界点， Galileo （伽利略）通过observation 木星，推翻地心说。<br>
at all 一点<br>
supreme court 最高法院<br>
supremacy 霸权 quantum supremacy 量子霸权<br>
两句话时间对比</p>
<p>8.promise 前途 希望</p>
<blockquote>
<p>remote sensing 遥感是指非接触的，远距离的探测技术。一般指运用传感器/遥感器对物体的电磁波的辐射、反射特性的探测。<br>
sites 遗址<br>
Archaelogy 考古学</p>
</blockquote>
<p>12.一些伦理学家担心，更深入地理解大脑也许无异于为某些行为开脱。如果我们发现自由意志只是神经回路系统制造的一种假象，要如何令人们为自己的行为负责?<br>
如果人类发现自由意志是假的就不会控制自己的行为了，找到理由开脱。<br>
词根: ex = not , culp = criminal exculpation = 脱罪 culprit 犯罪的人</p>
<p>14.Thought not 让步转折， 不是那么强烈，还是很强烈<br>
如果选 unbounded的话，就会变成，“Though 不是强烈到没边了，还是太强烈以至于“ 强烈到没边（unbounded） 和 great 形成程度取反关系。类比一下，小明跑步虽然不是世界上最快的，还是太快以至于一般人追赶不上。</p>
<p>18.sluggish = lazy</p>
<p>19.motley 混杂的，assortment 各种各样，混合物 -&gt; 相反对于 monolithic 单一的</p>
<p>20.founders 创立人<br>
&gt; 美国开国元勋（英语：Founding Fathers of the United States）是指签署《美国独立宣言》和《美国宪法》的政治领导人以及参与美国革命的领袖，又译作建国先贤。约翰·亚当斯、 本杰明·富兰克林、亚历山大·汉密尔顿、约翰·杰伊、托马斯·杰斐逊、詹姆斯·麦迪逊和乔治·华盛顿.<br>
concur 赞同<br>
in their own views, in reality 对比</p>
<p>23.by virtue of = because of 由于<br>
incisivive 准确的 = right<br>
priori assumption = cliche 陈词滥调 前后取反<br>
a priori 未经观察分析的，既定的<br>
vitiate 损害</p>
<p>25.lament 悲痛（追悼会）<br>
has never been greater   不能更好了<br>
perenial lament 常年抱怨 -&gt; 取反</p>
<p>30.解析：in one direction they have a affinity with newspaper photographs 对应的就是空格，newspaper photographs 就是写实的特征，所以正确答案选 B 选项。documentary 纪实的。<br>
翻译：在莫卧儿王朝时期的印度创作的画在志向上是纪实性的但在表现上却是装饰性的：一方面它们和报纸的照片类似，一方面它们有珠宝的错综复杂。</p>
<p>33.demographic 人口构成，人口学</p>
<p>34.aver 断言， averse 反对 , avow  公开宣称， disavow 否认 <strong>注意区分</strong></p>
<p>39.live up to 能达到，遵守，不辜负</p>
<p>45.satirize 讽刺， aspirant 欲望</p>
<p>48.scifi-fiction 科幻小说</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GRE 笔记3 阅读2]]></title>
        <id>https://yueqingsheng.github.io/gre-bi-ji-3-yue-du-2/</id>
        <link href="https://yueqingsheng.github.io/gre-bi-ji-3-yue-du-2/">
        </link>
        <updated>2020-08-06T02:05:23.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>early view = some = tended to = because = seem</p>
</blockquote>
<h2 id="r11">R11</h2>
<p>tended to = early view<br>
elect to 选择 保持单身<br>
as champion of 和 as critics of 形成对比<br>
institution 事情<br>
Yet 但是 = but<br>
distort 曲解<br>
this view = feminist scholar<br>
consequently<br>
author = new view, imply<br>
oppressive 残酷</p>
<h2 id="r13">R13</h2>
<p>thereby + ing 通过。。方式<br>
Because = early view<br>
compelling 令人幸福的, 让人相信的<br>
evolve = timeline 取反<br>
compromise 损害<br>
premodern 农业改革之前<br>
dismiss 不接受<br>
physiology 生理学</p>
<h2 id="r15">R15</h2>
<p>fiction 和 life history = document 对应 反义<br>
hiatus = gap<br>
curb 控制或限制</p>
<h2 id="r16">R16</h2>
<p>double-edged: of a knife, having two cutting edges<br>
对不同人名观点做笔记<br>
protagonist 主人公</p>
<h2 id="r18">R18</h2>
<p>Some = early view<br>
hunter-gatherer 农业改革之前，智人<br>
澳洲比美国环境恶劣，却有证据，说明美国之前根本没有人</p>
<h2 id="r19">R19</h2>
<p>segregated South 南方种族隔离<br>
determination 决心<br>
literacy 识字率<br>
record circulation 破纪录的发行量</p>
<h2 id="r20">R20</h2>
<p>chronically 长期的<br>
present 存在<br>
qualitatively 质变</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GRE 笔记1 阅读1 结构分析法]]></title>
        <id>https://yueqingsheng.github.io/gre-bi-ji/</id>
        <link href="https://yueqingsheng.github.io/gre-bi-ji/">
        </link>
        <updated>2020-08-01T14:55:43.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p><strong>1. 文章多层结构解析法(40%)<br>
教你如何彻底读懂一篇GRE英文阅读文章(100~500 words), 永远读懂句子内部关系,句子与句子之间的逻辑关系, 几个段落之间逻辑关系, 文章主要的pros and cons.<br>
Active engagement with the text,<br>
asking questions,<br>
formulating and evaluating hypotheses,<br>
reflecting on the relationship of the particular text to other texts and information.<br>
- Are they contrasting? Are they consistent?<br>
- Does one support the other?<br>
- Does one spell another out in greater detail?<br>
- Is one an application of another to a particular circumstance?</strong></p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p><strong>1. 文章多层结构解析法(40%)<br>
教你如何彻底读懂一篇GRE英文阅读文章(100~500 words), 永远读懂句子内部关系,句子与句子之间的逻辑关系, 几个段落之间逻辑关系, 文章主要的pros and cons.<br>
Active engagement with the text,<br>
asking questions,<br>
formulating and evaluating hypotheses,<br>
reflecting on the relationship of the particular text to other texts and information.<br>
- Are they contrasting? Are they consistent?<br>
- Does one support the other?<br>
- Does one spell another out in greater detail?<br>
- Is one an application of another to a particular circumstance?</strong></p>
</blockquote>
<!-- more -->
<h1 id="89-阅读初测-1020-2h">8.9 阅读初测 10/20 2h</h1>
<p>一道题目只有1.5min, 也就说 一个小短文, 从看文章到做完2个Question, 你只有3min</p>
<h2 id="r1">R1</h2>
<figure data-type="image" tabindex="1"><img src="https://yueqingsheng.github.io/post-images/1597022725946.png" alt="" loading="lazy"></figure>
<h3 id="第一句">第一句</h3>
<p><strong>Although the passenger pigeons, now extinct, were abundant in eighteenth- and nineteenth-century America, archaeological studies at twelfth-century Cahokian sites in the present day United States examined household food trash and found that traces of passenger pigeon were quite rare.</strong></p>
<p>timeline从前往后,  timeline 就是 time+event<br>
12世纪的sites, 鸽子trace少，18, 19世纪, 鸽子多;  20-21世纪, 鸽子灭绝.</p>
<blockquote>
<p>What is not an opinion?<br>
1. An opinion is not a statement of fact.<br>
2. An opinion is not a question.<br>
3. An opinion is not a fragment.<br>
4. An opinion expresses one idea.<br>
5. An opinion does not simply announce the idea you will argue.</p>
</blockquote>
<p>第一句话不是一个观点，因为符合1。观点所有时间地点人物事件 转折, 都要有。ETS<br>
一定会有一个 “转”</p>
<h3 id="第二句">第二句</h3>
<p><strong>Given that the sites were close to a huge passenger pigeon roost documented by John James Audubon in the nineteenth century and that Cahokians consumed almost every other animal protein source available, the archaeologists conducting the studies concluded the passenger pigeon population had once been very limited before increasing dramatically in post-Columbian America.</strong></p>
<p>前半句不是观点，是个客观事实。后半句= view 考古学者提出来了一个conclusion， 所以是个观点。</p>
<blockquote>
<p>post-Columbian: Referring to the cultures of the American continent after the European influence, specifically to the era after the continent was visited by Christopher Columbus.被哥伦布发现后的时期。<br>
哥伦布是个男的，那么拉丁文的 地名呢, 要换成女性 阴性词所以呢是Columbia</p>
</blockquote>
<p>秦始皇统一了中国, 秦就是chin，a就是地名的阴性后缀。<br>
为啥都是阴性后缀 - 拉丁文地名 约定俗成,</p>
<blockquote>
<p>Europa<br>
Europa, or Jupiter II, is the smallest of the four Galilean moons orbiting Jupiter, and the sixth-closest to the planet of all the 79 known moons of Jupiter. It is also the sixth-largest moon in the Solar System.</p>
</blockquote>
<blockquote>
<p>OG考察题材:<br>
Physical sciences<br>
Biological sciences<br>
Social sciences<br>
Arts and humanities<br>
Everyday topics</p>
</blockquote>
<p>第二句强调一个 change，12世纪- 1492少 ，1492-now 多。</p>
<h3 id="第三句">第三句</h3>
<p><strong>Other archaeologists have criticized those conclusions on the grounds that passenger pigeon bones would not be likely to be preserved.</strong></p>
<p>主要是攻击了这个 on the gound that = reason/evidence 论点 (不是结论conclusion)<br>
<strong>opinion = view = conclusion = claim</strong><br>
<strong>on the ground that  = for the reason that = because</strong><br>
12世纪鸽子也许很多,  土著人也吃了无数鸽子,但是吃过的骨头都没有保存下来, 而已。反驳上面说的鸽子骨头少（这个evidence） -&gt; 12世纪-1492没有什么鸽子</p>
<h3 id="第四句">第四句</h3>
<p><strong>But all the archaeological projects found plenty of bird bones- and even  bones from fish.</strong><br>
不可能保存不下骨头，反驳上一句，对证据的反向驳斥再取反，  counter - counter -view。</p>
<h3 id="总结">总结</h3>
<p>文章结构 : 第一句话 fact<br>
第二句话 提出 opinion = view<br>
第三句话 提出反对的 counter -view<br>
最后一句 counter - counter -view<br>
最后一句话, 是对第二句话的取同<br>
view = counter-counter-view 取同</p>
<h3 id="题目">题目</h3>
<h4 id="第一题">第一题</h4>
<p>E counter - counter -view 对应了counter- objection</p>
<h4 id="第二题">第二题</h4>
<p>Which of the following, if true, would most call into question the reasoning of “the archaeologists conducting the studies”?</p>
<p>E. Passenger pigeons tended not to roost at the same sites for very many generations</p>
<p>12世纪的 Cahokian sites 很小 没有鸽子, 不能说明 100% 美洲都没有鸽子，也许其他纽约 洛杉矶有鸽子聚集地呢。12世纪也许恰好 Cahokian 没有鸽子。</p>
<h2 id="r2-整理全部生词运用结构解析法-翻译提前完成">R2 整理全部生词，运用结构解析法， 翻译提前完成</h2>
<h3 id="第一句-2">第一句</h3>
<p>divide 表示2个对立的观点 or 学派</p>
<h3 id="第二句-2">第二句</h3>
<p>technicians 和 landscape painters 取反， 中间有一个 while<br>
第二句跟第一句，举例子, 解释说明, 取同。<br>
所以第二句的others 应该是说 before 19世纪的是艺术流派</p>
<h3 id="第三句-2">第三句</h3>
<p>dichotomy 同义替换 divide<br>
aesthetic = visual effects = landscapge painting</p>
<h3 id="第四句-2">第四句</h3>
<p>Until the 1980s是考点词了, until 这个词 是before 还是 after?<br>
before<br>
看到 before、 after 、 until<br>
脑子里习惯性有一个取反<br>
Time-event, 先对时间取反, 再对 event 取反</p>
<h3 id="最后一句">最后一句</h3>
<p>才没有什么所谓的 divide dichotomy = boundary, no boundary at all<br>
so 文章结构， 5句话讲early view，最后一句话, 讲new view<br>
puzzle = question = 不认可early view</p>
<h2 id="r3">R3</h2>
<p>第一句话, 看到some 想到什么, 是一个early view<br>
While few people doubt that<br>
让步取同</p>
<h2 id="r4">R4</h2>
<p>note 表示 发现了一个问题</p>
<h2 id="r8">R8</h2>
<p>early view , early evidence, although 表示后面有观点会取反，形成对比<br>
qualify 取反</p>
<h2 id="r10">R10</h2>
<p>4000 years ago = -4000<br>
at least 选项有 80% 可能是正确的</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[月报 7月]]></title>
        <id>https://yueqingsheng.github.io/zhou-bao-7-yue/</id>
        <link href="https://yueqingsheng.github.io/zhou-bao-7-yue/">
        </link>
        <updated>2020-07-23T03:11:51.000Z</updated>
        <content type="html"><![CDATA[<p>两个多月没出现过了🙁，最近打算在自学 GRE 考试，看的内容不多。这个月最火的就是 GPT-3 demo 了，有些自然语言到代码生成的样例确实蛮意思的，根据描述就可以生成 SQL, Figma 或者 CSS 样式了。</p>
<figure data-type="image" tabindex="1"><img src="https://yueqingsheng.github.io/post-images/1596519527755.png" alt="" loading="lazy"></figure>
<h2 id="ai">AI</h2>
<p>CNN 入门讲解，对基础概念理解比较不错。 <a href="https://zhuanlan.zhihu.com/p/161640214"  target="_blank">什么是CNN？写给小白的机器学习入门贴</a></p>
<p>用之前提到过的 OPENAI 的 GPT-3 API 做的样例，包括了根据描述生成代码之类的比较有意思的东西 。 <a href="https://machinelearningtokyo.com/2020/07/26/10-cool-gpt-3-demos/"  target="_blank">10 COOL GPT-3 DEMOS</a></p>
<p>Github 上整理的 demo  <a href="https://github.com/elyase/awesome-gpt3"  target="_blank">awesome-gpt3</a></p>
<h2 id="文章">文章</h2>
<p>感觉把 Computer Science 这个行业讲的蛮好的，建议毕业生或有兴趣从事 CS 的都看一下 《黑客与画家》第二章。 <a href="https://weread.qq.com/web/reader/5b9328f05dd9fb5b922d1ebk65132ca01b6512bd43d90e3"  target="_blank">2 黑客与画家</a></p>
<h2 id="视频">视频</h2>
<p><img src="https://yueqingsheng.github.io/post-images/1596520101929.gif" alt="" loading="lazy"><br>
软饭硬吃，哈哈，有以前毅吧那味了。<br>
<a href="https://www.bilibili.com/video/BV1z54y1S7AX"  target="_blank">广东爱情故事</a></p>
<div class="aspect-ratio">
        <iframe src="//player.bilibili.com/player.html?aid=839022882&bvid=BV1z54y1S7AX&cid=219392622&page=1&high_quality=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>
<p>认真做历史科普的人不多了，老阴阳师做科普的更不多了。最近读了篇 GRE 文章讲，虽然在科技发展如此快的时代，有些科学常识是如此的珍贵，对于普通人却像腐烂在温室里的花，无人在乎。<br>
<a href="https://www.acfun.cn/v/ac16518467"  target="_blank">西方灾难史：美国大萧条（全集），点这里看全集哦。</a></p>
<div class="aspect-ratio"><iframe style="min-width: 500px;min-height: 300px"   src="https://www.acfun.cn/player/ac16518467" id="ACPlayer-re"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>
</div>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[递归]]></title>
        <id>https://yueqingsheng.github.io/di-gui/</id>
        <link href="https://yueqingsheng.github.io/di-gui/">
        </link>
        <updated>2020-06-25T20:07:04.000Z</updated>
        <content type="html"><![CDATA[<h2 id="递归模板记住递归是对每一层做的操作">递归模板，记住递归是对每一层做的操作</h2>
<figure data-type="image" tabindex="1"><img src="https://yueqingsheng.github.io/post-images/1593212226238.png" alt="" loading="lazy"></figure>
<h2 id="题目1二叉树的最大深度">题目1：二叉树的最大深度</h2>
<pre><code class="language-python"># Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxDepth(self, root: TreeNode) -&gt; int:
        if not root:
            return 0
        ldepth = self.maxDepth(root.left) + 1 
        rdepth = self.maxDepth(root.right) + 1
        return max(ldepth, rdepth) 
</code></pre>
<p>可以把判断叶子节点去掉的原因，可以多走一层走到叶子节点下一层发现没有就返回上来0。每走一层就加1，走到叶子节点下一层，返回0 +1 也是一样的。</p>
<p>官方解法，每往下走一层就+1， 然后每层取左右两边最大的深度</p>
<pre><code class="language-python">class Solution:
    def maxDepth(self, root):
        &quot;&quot;&quot;
        :type root: TreeNode
        :rtype: int
        &quot;&quot;&quot; 
        if root is None: 
            return 0 
        else: 
            left_height = self.maxDepth(root.left) 
            right_height = self.maxDepth(root.right) 
            return max(left_height, right_height) + 1 
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[  树、二叉树]]></title>
        <id>https://yueqingsheng.github.io/shu-er-cha-shu/</id>
        <link href="https://yueqingsheng.github.io/shu-er-cha-shu/">
        </link>
        <updated>2020-06-25T18:29:23.000Z</updated>
        <content type="html"><![CDATA[<p>数跟图的区别是有没有闭环<br>
<img src="https://yueqingsheng.github.io/post-images/1593196326489.png" alt="" loading="lazy"></p>
<h2 id="二叉搜索树">二叉搜索树：</h2>
<h3 id="遍历">遍历</h3>
<p><img src="https://yueqingsheng.github.io/post-images/1593198432381.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593198530487.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593198604293.png" alt="" loading="lazy"><br>
查询，插入 logn<br>
插入：先查找位置，再插入<br>
删除，去第一个大于parent node的节点。<br>
平均 O(log(n)) 最差情况 O(n)</p>
<h2 id="题目1-n-叉树前序遍历">题目1： N 叉树前序遍历</h2>
<p>给定一个 N 叉树，返回其节点值的前序遍历。<br>
<img src="https://yueqingsheng.github.io/post-images/1593201852265.png" alt="" loading="lazy"></p>
<pre><code class="language-python">&quot;&quot;&quot;
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
&quot;&quot;&quot;

class Solution:
    def preorder(self, root: 'Node') -&gt; List[int]:
        path = []
        def traverse(node):
            if node:
                path.append(node.val)
                for n in node.children:
                    traverse(n)
        traverse(root)
        return path
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[链表]]></title>
        <id>https://yueqingsheng.github.io/lian-biao/</id>
        <link href="https://yueqingsheng.github.io/lian-biao/">
        </link>
        <updated>2020-06-25T01:49:36.000Z</updated>
        <content type="html"><![CDATA[<p>数组访问 O(1), 添加删除 O(n)<br>
链表访问O(n), 添加删除 O(1)</p>
<h2 id="跳表">跳表</h2>
<p>log(n)<br>
基于有序的链表 Redis  LevelDB<br>
<img src="https://yueqingsheng.github.io/post-images/1593179884875.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593179968260.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593180120060.png" alt="" loading="lazy"></p>
<h3 id="python-swap">python swap</h3>
<p>x, y = y, x</p>
<h2 id="题目1-删除排序数组中的重复项">题目1： 删除排序数组中的重复项</h2>
<h3 id="解法1一开始的思路是把数组循环一遍有重复的就删除掉on2-的效率">解法1：一开始的思路是把数组循环一遍，有重复的就删除掉，O(n^2) 的效率</h3>
<p>数组循环删除的方法，复制一遍数组或者使用反向遍历<br>
为什么反向遍历不会出现 index 的错误？<br>
This implies that if you iterate the list back to front, if you remove an item at the current index, everything to it's right shifts left - but that doesn't matter, since you've already dealt with all the elements to the right of the current position, and you're moving left - the next element to the left is unaffected by the change, and so the iterator gives you the element you expect.<br>
a b c x d<br>
a b c d</p>
<blockquote>
<p>python range<br>
range(start, stop, step)<br>
reverse: range(len(x)-1, -1, -1)</p>
</blockquote>
<pre><code class="language-python">class Solution:
    def removeDuplicates(self, nums: List[int]) -&gt; int:
        if len(nums) == 1:
            return len(nums)
        for i in range(len(nums)-1,0,-1):
            if nums[i] == nums[i-1]:
                nums.pop(i)
        return len(nums)
</code></pre>
<h3 id="解法2-双指针-on">解法2： 双指针  O(n)</h3>
<p>一个指针指向要放不同element的下标，另外一个指针用来搜索下一个要放的元素</p>
<pre><code class="language-python">class Solution:
    def removeDuplicates(self, nums: List[int]) -&gt; int:
        i = 0
        for j in range(len(nums)):
            if nums[i] != nums[j]:
                nums[i+1] = nums[j]
                i = i + 1
        return len(nums[:i+1])
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[算法基础]]></title>
        <id>https://yueqingsheng.github.io/shi-jian-fu-za-du-he-kong-jian-fu-za-du-fen-xi/</id>
        <link href="https://yueqingsheng.github.io/shi-jian-fu-za-du-he-kong-jian-fu-za-du-fen-xi/">
        </link>
        <updated>2020-06-22T12:18:19.000Z</updated>
        <content type="html"><![CDATA[<h1 id="时间复杂度和空间复杂度分析">时间复杂度和空间复杂度分析</h1>
<h2 id="时间复杂度">时间复杂度：</h2>
<p>Big O noataion<br>
<img src="https://yueqingsheng.github.io/post-images/1593131066367.png" alt="" loading="lazy"></p>
<p>递归分析：<br>
<img src="https://yueqingsheng.github.io/post-images/1593131294007.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593131391447.png" alt="" loading="lazy"></p>
<p>Master Theorem<br>
<img src="https://yueqingsheng.github.io/post-images/1593144733931.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593131483674.png" alt="" loading="lazy"><br>
二叉树遍历 O(n)<br>
DFS, BFS O(n)</p>
<h2 id="空间复杂度">空间复杂度</h2>
<figure data-type="image" tabindex="1"><img src="https://yueqingsheng.github.io/post-images/1593145072638.png" alt="" loading="lazy"></figure>
<h2 id="入门题1-strstr">入门题1: StrStr</h2>
<p><img src="https://yueqingsheng.github.io/post-images/1593391012386.png" alt="" loading="lazy"><br>
注意检查空字符串</p>
<pre><code class="language-python">class Solution:
    def strStr(self, haystack: str, needle: str) -&gt; int:
        if len(needle) == 0 :
            return 0
        for i in range(len(haystack)):
            if haystack[i : i + len(needle)] == needle:
                return i
        return -1
</code></pre>
<h2 id="入门题2-子集">入门题2: 子集</h2>
<p><img src="https://yueqingsheng.github.io/post-images/1593391087028.png" alt="" loading="lazy"><br>
分解问题使用递归解决</p>
<h3 id="我的解法把所有可能过一遍去重">我的解法：把所有可能过一遍，去重</h3>
<pre><code class="language-python">class Solution:
    def subsets(self, nums) :
        subsets = [[]]
        def subset(nums):
            if len(nums) == 0:
                return
            subsets.append(nums)
            for n in nums:
                nums_copy = nums[:]
                nums_copy.remove(n)
                if nums_copy not in subsets:
                    subset(nums_copy)
            return
        subset(nums)
        return subsets
</code></pre>
<h3 id="官方解法1-从小到大每次有新数出现的时候把之前的可能序列合并上这个数">官方解法1: 从小到大，每次有新数出现的时候，把之前的可能序列合并上这个数</h3>
<figure data-type="image" tabindex="2"><img src="https://yueqingsheng.github.io/post-images/1593391785024.png" alt="" loading="lazy"></figure>
<pre><code class="language-python">class Solution:
    def subsets(self, nums: List[int]) -&gt; List[List[int]]:
        n = len(nums)
        output = [[]]
        
        for num in nums:
            output += [curr + [num] for curr in output]
        
        return output
</code></pre>
<h4 id="python-listt-concatenata">python listt concatenata</h4>
<p>a = []<br>
a += [3]<br>
a = a+ [3]</p>
<h3 id="官方解法2-回溯法">官方解法2: 回溯法</h3>
<p><img src="https://yueqingsheng.github.io/post-images/1593393082311.png" alt="" loading="lazy"><br>
<img src="https://yueqingsheng.github.io/post-images/1593393119046.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
</feed>