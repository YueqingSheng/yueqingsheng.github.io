<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yueqingsheng.github.io</id>
    <title>哇哦</title>
    <updated>2020-04-22T06:17:04.121Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yueqingsheng.github.io"/>
    <link rel="self" href="https://yueqingsheng.github.io/atom.xml"/>
    <subtitle>Don&apos;t Learn to Code — Learn to Automate</subtitle>
    <logo>https://yueqingsheng.github.io/images/avatar.png</logo>
    <icon>https://yueqingsheng.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 哇哦</rights>
    <entry>
        <title type="html"><![CDATA[Vue]]></title>
        <id>https://yueqingsheng.github.io/post/vue/</id>
        <link href="https://yueqingsheng.github.io/post/vue/">
        </link>
        <updated>2020-04-19T18:58:12.000Z</updated>
        <content type="html"><![CDATA[<h2 id="使用">使用</h2>
<h3 id="cdn">CDN</h3>
<pre><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;
</code></pre>
<h2 id="数据绑定">数据绑定</h2>
<h3 id="括号绑定">括号绑定</h3>
<pre><code>{{message}} //括号中可使用表达式 如 {{message+ message}}
</code></pre>
<h3 id="指令式绑定">指令式绑定</h3>
<pre><code>&lt;div v-bind:id=&quot;message&quot;&gt;&lt;/div&gt;
</code></pre>
<h4 id="简写形式">简写形式</h4>
<pre><code>&lt;div :id=&quot;message&quot;&gt;&lt;/div&gt;
</code></pre>
<p>这里我们遇到了一点新东西。你看到的 v-bind attribute 被称为指令。指令带有前缀 v-，以表示它们是 Vue 提供的特殊 attribute。可能你已经猜到了，它们会在渲染的 DOM 上应用特殊的响应式行为。在这里，该指令的意思是：“将这个元素节点的 title attribute 和 Vue 实例的 message 属性保持一致”。</p>
<h3 id="响应式">响应式</h3>
<p>可以这样理解：当一个状态改变之后，与这个状态相关的事务也立即随之改变，从前端来看就是数据状态改变后相关 DOM 也随之改变。数据模型仅仅是普通的 JavaScript 对象。而当你修改它们时，视图会进行更新。</p>
<h3 id="v-if-v-else-v-show-v-for">v-if v-else v-show v-for</h3>
<pre><code class="language-html">  &lt;body&gt;
    &lt;div id=&quot;app&quot;&gt;
      {{message}}{{message+ message}}
      &lt;div :id=&quot;message&quot;&gt;&lt;/div&gt;
      &lt;ul&gt;
        &lt;li v-for=&quot;item in list&quot;&gt;
          &lt;span v-if=&quot;!item.del&quot;&gt;{{item.title}}&lt;/span&gt;
          &lt;span v-else style=&quot;text-decoration: line-through;&quot;&gt;{{item.title}}&lt;/span&gt;
          &lt;button v-show=&quot;!item.del&quot;&gt;删除&lt;/button&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
    &lt;/div&gt;
    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;
      var vm = new Vue({
        el: &quot;#app&quot;,
        data: {
          message: &quot;Hello World&quot;,
          list: [
            {
              title: &quot;课程1&quot;,
              del: false,
            },
            {
              title: &quot;课程2&quot;,
              del: true,
            },
          ],
        },
      });
    &lt;/script&gt;
  &lt;/body&gt;
</code></pre>
<h2 id="组件">组件</h2>
<pre><code class="language-html">     Vue.component(&quot;todo-item&quot;,{
        props:{
          title: String,
          del: {
            type: Boolean,
            default: false,
          },
        },
        template: `
         &lt;li &gt;
          &lt;span v-if=&quot;!del&quot;&gt;{{title}}&lt;/span&gt;
          &lt;span v-else style=&quot;text-decoration: line-through;&quot;&gt;{{title}}&lt;/span&gt;
          &lt;button v-show=&quot;!del&quot;&gt;删除&lt;/button&gt;
        &lt;/li&gt;
        `,
          data: function(){
            return {}
          },
          methods: {

          },
      })

      Vue.component(&quot;todo-list&quot;, {
          template: `
           &lt;ul&gt;
            &lt;todo-item v-for=&quot;item in list&quot; :title=&quot;item.title&quot; :del=&quot;!item.del&quot;&gt;&lt;/todo-item&gt;
          &lt;/ul&gt;
        `,
          data: function () {
            return {
              list: [
                {
                  title: &quot;课程1&quot;,
                  del: false,
                },
                {
                  title: &quot;课程2&quot;,
                  del: true,
                },
            ]}
          }
        })
</code></pre>
<p>组件中data 不能使用同一个data,因为pass by reference ，在一个地方改变，其他地方也会改变。data要求唯一化。</p>
<pre><code class="language-html">
</code></pre>
<pre><code class="language-html">
</code></pre>
<pre><code class="language-html">
</code></pre>
<pre><code class="language-html">
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一次神经网络实践]]></title>
        <id>https://yueqingsheng.github.io/post/di-yi-ci-shen-jing-wang-luo-shi-jian/</id>
        <link href="https://yueqingsheng.github.io/post/di-yi-ci-shen-jing-wang-luo-shi-jian/">
        </link>
        <updated>2020-04-17T17:44:55.000Z</updated>
        <content type="html"><![CDATA[<p>简单总结下教训：<br>
<img src="https://yueqingsheng.github.io/post-images/1587407335871.jpg" alt="" loading="lazy"></p>
<h2 id="输入输出">输入，输出</h2>
<p>输入就是 a和 b, 输出是c。</p>
<h3 id="first-attempt">First attempt</h3>
<p>一开始想把天数，1到28天作为输入，28天的感染人数作为输出。去找 天数和 感染的函数关系。错误的原因，28天只是任意的28天时间段，去强行找 1-28 和感染的关系是不成立的。也没有关系。</p>
<h3 id="second-attempt">Second attempt</h3>
<p>用RNN实现，方向是对的。能力不够复现RNN或LSTM(吐槽下，老师说如果要写的话，要从0复现一个，地狱级难度任务)</p>
<h3 id="总结">总结</h3>
<p>其实确认输入输出，最重要的就是确立，想找的是什么与什么直接的关系。相互影响的那两个量。题目写的已经很清楚了，用c_t 和 t_pd 预测 c_inf</p>
<h2 id="其中忽视的问题">其中忽视的问题</h2>
<p>只看到了cost变大，没有去考虑原因。原因是因为梯度爆炸。梯度爆炸的原因是，输入之间差值太大，呈现exponetial爆炸增长。</p>
<h2 id="最重要学到的点什么时候要做归一化即normalizition">！！！！ 最重要学到的点，什么时候要做归一化，即Normalizition</h2>
<p>归一化，在处理奇异值时候特别重要，如果数据存在极大或极小值，会严重影响weight 的收敛。归一化即，把输入和输出限制在同意范围内，如[0,1],映射到同一维度内。<br>
<a href="https://blog.csdn.net/zenghaitao0128/article/details/78361038">参考:机器学习——标准化/归一化的目的和作用</a></p>
<p>Anyway, 有空的话，可以用LSTM复现个玩玩。获取一个多维度输入，输出将来的感染人数。直到感染变化为0为止。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 18]]></title>
        <id>https://yueqingsheng.github.io/post/day-18/</id>
        <link href="https://yueqingsheng.github.io/post/day-18/">
        </link>
        <updated>2020-04-09T00:51:57.000Z</updated>
        <content type="html"><![CDATA[<p>[x] lecture 28<br>
[x] lecture 29<br>
[ ] lecture 30 TODO vector embeddings<br>
[x] lecture 31<br>
cs489 蛮有意思的，neuro science 从头贯穿到尾，讲neural network 的起源，和各种机制设置的原因。整个学期其实就一个Model, 就是人脑神经。从脑科学的角度改进network和思考大脑是如何解决某项任务的，如视觉系统。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 17]]></title>
        <id>https://yueqingsheng.github.io/post/day-17/</id>
        <link href="https://yueqingsheng.github.io/post/day-17/">
        </link>
        <updated>2020-04-07T05:31:09.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-3551832"><label class="task-list-item-label" for="task-item-3551832"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7806698">  vue<br>
<label class="task-list-item-label" for="task-item-7806698">  vue
看了 react angular文档，太复杂了。转vue了。</label></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 16]]></title>
        <id>https://yueqingsheng.github.io/post/day-16/</id>
        <link href="https://yueqingsheng.github.io/post/day-16/">
        </link>
        <updated>2020-04-06T05:25:02.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9752955"><label class="task-list-item-label" for="task-item-9752955"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8890251"><label class="task-list-item-label" for="task-item-8890251"> 课程价格</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6706144"><label class="task-list-item-label" for="task-item-6706144"> 评价</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5414197"><label class="task-list-item-label" for="task-item-5414197"> 评分</label></li>
</ul>
<p>今天 windows, mysql 直接抽了，不知道为啥，完全不听typeorm的改动，我服了。本来半天能写完的代码，硬是debug一天。结果发现是数据库的问题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 15]]></title>
        <id>https://yueqingsheng.github.io/post/day-15/</id>
        <link href="https://yueqingsheng.github.io/post/day-15/">
        </link>
        <updated>2020-04-03T17:28:18.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-3073282"><label class="task-list-item-label" for="task-item-3073282"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7037327"><label class="task-list-item-label" for="task-item-7037327"> code: morning</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6834607"><label class="task-list-item-label" for="task-item-6834607"> 订单</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-8781815"><label class="task-list-item-label" for="task-item-8781815"> 课程价格</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-2258428"><label class="task-list-item-label" for="task-item-2258428"> 评价</label></li>
</ul>
<p>订单表设计：<br>
类型： 课程， (谈一谈)talk, 要传<br>
图片<br>
课程标题： 订单的话用课程号区分吧，定为timestamp ok, tradeno<br>
class: 关系<br>
counselor: 关系</p>
<p>标题 body, 图片服务器根据type和body查找订单，存储Image和关系</p>
<p>订单评价：<br>
评价： comment 包含 counselor, course 里有评价, counselor里 eager， 流程就按post里走<br>
评分： 每次评价都创建一个即使为空，按 （原来的+new）/总数<br>
课程价格： price class ， 包含 几天</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[nestjs的坑]]></title>
        <id>https://yueqingsheng.github.io/post/nestjs-de-keng/</id>
        <link href="https://yueqingsheng.github.io/post/nestjs-de-keng/">
        </link>
        <updated>2020-04-03T07:43:24.000Z</updated>
        <summary type="html"><![CDATA[<p>不定期更新</p>
]]></summary>
        <content type="html"><![CDATA[<p>不定期更新</p>
<!-- more -->
<p>变量命名时尽量不要用type, class 这些名称，以免用的时候，报一些奇怪的错误。编译器不知道是，自定义的名，还是语法里的意思。comment 也是关键字，需自己导包，我也是服了。</p>
<p>eager 谨慎使用，特别是relation有相互包含的时候。必须只能加在一边，防止重复包含，导致stack overflow。eager 只会在find里生效</p>
<p>find 有很多选项足够用了可以代替 queryBuilder</p>
<h2 id="onetomany-save">OneToMany Save</h2>
<p>例子： 商品储存多个价格， data 是发送的商品数据，其中包含了price</p>
<pre><code class="language-typescript">    data.price = await this.priceRepository.save(price);
    data = await this.repository.create(data);
    return await this.repository.save(data);
</code></pre>
<p>注意 data.price 这一步是必须的，是为了更新刚储存完的id号，typeorm 用id 来建立关系</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 14]]></title>
        <id>https://yueqingsheng.github.io/post/day-14/</id>
        <link href="https://yueqingsheng.github.io/post/day-14/">
        </link>
        <updated>2020-04-03T05:52:34.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6833547"><label class="task-list-item-label" for="task-item-6833547"> Angular 起步2</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-9984698"><label class="task-list-item-label" for="task-item-9984698"> Angular 表单</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-1613420"><label class="task-list-item-label" for="task-item-1613420"> Angular 路由</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-7729362"><label class="task-list-item-label" for="task-item-7729362"> Angular 守卫</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" disabled="" type="checkbox" id="task-item-9534568"><label class="task-list-item-label" for="task-item-9534568"> Angular 异步路由</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7064515"><label class="task-list-item-label" for="task-item-7064515"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-6616897"><label class="task-list-item-label" for="task-item-6616897"> code: morning</label></li>
</ul>
<p>小细节：修改了首页图标跳转</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 13]]></title>
        <id>https://yueqingsheng.github.io/post/day-13/</id>
        <link href="https://yueqingsheng.github.io/post/day-13/">
        </link>
        <updated>2020-04-02T04:55:40.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8455064"><label class="task-list-item-label" for="task-item-8455064"> Angular 起步1</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-414934"><label class="task-list-item-label" for="task-item-414934"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-7738683"><label class="task-list-item-label" for="task-item-7738683"> code: morning</label></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Day 12]]></title>
        <id>https://yueqingsheng.github.io/post/day-12/</id>
        <link href="https://yueqingsheng.github.io/post/day-12/">
        </link>
        <updated>2020-04-01T17:46:11.000Z</updated>
        <content type="html"><![CDATA[<ul class="contains-task-list">
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5956462"><label class="task-list-item-label" for="task-item-5956462"> Angular Components</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-4097955"><label class="task-list-item-label" for="task-item-4097955"> 略微修改了主题，简化了标题下的header，以及返回按钮（加粗），有空加个返回顶部</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8616149"><label class="task-list-item-label" for="task-item-8616149"> 配置了vscode 实现了 terminal 和 editor 全部自动化 和代码高亮主题</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-5495832"><label class="task-list-item-label" for="task-item-5495832"> code: chat</label></li>
<li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox" id="task-item-8538128"><label class="task-list-item-label" for="task-item-8538128"> code: morning</label></li>
</ul>
]]></content>
    </entry>
</feed>